{"ast":null,"code":"var _jsxFileName = \"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Profile.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  // State to manage user's posts and comments\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const [showNewPost, setShowNewPost] = useState(false); // State to control the visibility of the new post\n  const [comments, setComments] = useState({}); // Store comments for each post\n\n  // Function to handle posting a new image or project\n  const handlePost = () => {\n    // Implement logic to upload the new post (image or project)\n    // After uploading, add it to the posts state and show the new post\n    if (newPost.trim() !== '') {\n      const updatedPosts = [...posts, newPost];\n      setPosts(updatedPosts);\n      setNewPost('');\n      setShowNewPost(true); // Show the new post\n    }\n  };\n\n  // Function to handle comment deletion\n  const handleDeleteComment = (postIndex, commentIndex) => {\n    const updatedComments = {\n      ...comments\n    };\n    updatedComments[postIndex].splice(commentIndex, 1);\n    setComments(updatedComments);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: posts.map((post, postIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments[postIndex] && comments[postIndex].map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [comment, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(postIndex, commentIndex),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)]\n          }, commentIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, postIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"dnnhEyBce0B0pTNzVVfoipe24vo=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Profile","_s","posts","setPosts","newPost","setNewPost","showNewPost","setShowNewPost","comments","setComments","handlePost","trim","updatedPosts","handleDeleteComment","postIndex","commentIndex","updatedComments","splice","className","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","comment","onClick","_c","$RefreshReg$"],"sources":["/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Profile.css'; // Import the CSS file\n\nfunction Profile() {\n  // State to manage user's posts and comments\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const [showNewPost, setShowNewPost] = useState(false); // State to control the visibility of the new post\n  const [comments, setComments] = useState({}); // Store comments for each post\n\n  // Function to handle posting a new image or project\n  const handlePost = () => {\n    // Implement logic to upload the new post (image or project)\n    // After uploading, add it to the posts state and show the new post\n    if (newPost.trim() !== '') {\n      const updatedPosts = [...posts, newPost];\n      setPosts(updatedPosts);\n      setNewPost('');\n      setShowNewPost(true); // Show the new post\n    }\n  };\n\n  // Function to handle comment deletion\n  const handleDeleteComment = (postIndex, commentIndex) => {\n    const updatedComments = { ...comments };\n    updatedComments[postIndex].splice(commentIndex, 1);\n    setComments(updatedComments);\n  };\n\n  return (\n    <div className=\"profile-page\">\n      {/* ... Existing code ... */}\n\n      {/* Display user's existing posts with comments */}\n      {posts.map((post, postIndex) => (\n        <div key={postIndex} className=\"user-post\">\n          {/* Render the user's post (image or project) */}\n          <p>{post}</p>\n          <div className=\"post-actions\">\n            <button>Like</button>\n            <button>Comment</button>\n            <button>Share</button>\n          </div>\n\n          {/* Display comments for the post */}\n          <div className=\"comments\">\n            <h4>Comments:</h4>\n            <ul>\n              {comments[postIndex] &&\n                comments[postIndex].map((comment, commentIndex) => (\n                  <li key={commentIndex}>\n                    {comment}\n                    <button\n                      onClick={() => handleDeleteComment(postIndex, commentIndex)}\n                    >\n                      Delete\n                    </button>\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Profile;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA;IACA,IAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzB,MAAMC,YAAY,GAAG,CAAC,GAAGV,KAAK,EAAEE,OAAO,CAAC;MACxCD,QAAQ,CAACS,YAAY,CAAC;MACtBP,UAAU,CAAC,EAAE,CAAC;MACdE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;;EAED;EACA,MAAMM,mBAAmB,GAAGA,CAACC,SAAS,EAAEC,YAAY,KAAK;IACvD,MAAMC,eAAe,GAAG;MAAE,GAAGR;IAAS,CAAC;IACvCQ,eAAe,CAACF,SAAS,CAAC,CAACG,MAAM,CAACF,YAAY,EAAE,CAAC,CAAC;IAClDN,WAAW,CAACO,eAAe,CAAC;EAC9B,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAI1BjB,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEP,SAAS,kBACzBf,OAAA;MAAqBmB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAExCpB,OAAA;QAAAoB,QAAA,EAAIE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACb1B,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BpB,OAAA;UAAAoB,QAAA,EAAQ;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrB1B,OAAA;UAAAoB,QAAA,EAAQ;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxB1B,OAAA;UAAAoB,QAAA,EAAQ;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eAGN1B,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBpB,OAAA;UAAAoB,QAAA,EAAI;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB1B,OAAA;UAAAoB,QAAA,EACGX,QAAQ,CAACM,SAAS,CAAC,IAClBN,QAAQ,CAACM,SAAS,CAAC,CAACM,GAAG,CAAC,CAACM,OAAO,EAAEX,YAAY,kBAC5ChB,OAAA;YAAAoB,QAAA,GACGO,OAAO,eACR3B,OAAA;cACE4B,OAAO,EAAEA,CAAA,KAAMd,mBAAmB,CAACC,SAAS,EAAEC,YAAY,CAAE;cAAAI,QAAA,EAC7D;YAED;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GANFV,YAAY;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOjB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,GAzBEX,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0Bd,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxB,EAAA,CA9DQD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAgEhB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}