{"ast":null,"code":"var _jsxFileName = \"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([{\n    id: 1,\n    type: 'code',\n    content: 'function example() {\\n  // Your code here\\n}',\n    comments: [],\n    likes: 0\n  }, {\n    id: 2,\n    type: 'image',\n    content: 'project-image.jpg',\n    comments: [],\n    likes: 0\n  }]);\n  const addComment = (postId, comment) => {\n    const updatedPosts = posts.map(post => {\n      if (post.id === postId) {\n        post.comments.push(comment);\n      }\n      return post;\n    });\n    setPosts(updatedPosts);\n  };\n  const likePost = postId => {\n    const updatedPosts = posts.map(post => {\n      if (post.id === postId) {\n        post.likes += 1;\n      }\n      return post;\n    });\n    setPosts(updatedPosts);\n  };\n  const sharePost = postId => {\n    // Implement sharing logic (e.g., opening a sharing dialog)\n    alert(`Share post with id ${postId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [post.type === 'code' ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.content,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => likePost(post.id),\n          children: [\"Like (\", post.likes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sharePost(post.id),\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: comment\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment\",\n          onKeyUp: e => {\n            if (e.key === 'Enter' && e.target.value.trim() !== '') {\n              addComment(post.id, e.target.value);\n              e.target.value = '';\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"lC3dirZpI2qLQ4HVb57t4W51G2A=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","id","type","content","comments","likes","addComment","postId","comment","updatedPosts","map","post","push","likePost","sharePost","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","index","placeholder","onKeyUp","e","key","target","value","trim","_c","$RefreshReg$"],"sources":["/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Posts.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Posts() {\n  const [posts, setPosts] = useState([\n    {\n      id: 1,\n      type: 'code',\n      content: 'function example() {\\n  // Your code here\\n}',\n      comments: [],\n      likes: 0,\n    },\n    {\n      id: 2,\n      type: 'image',\n      content: 'project-image.jpg',\n      comments: [],\n      likes: 0,\n    },\n  ]);\n\n  const addComment = (postId, comment) => {\n    const updatedPosts = posts.map((post) => {\n      if (post.id === postId) {\n        post.comments.push(comment);\n      }\n      return post;\n    });\n    setPosts(updatedPosts);\n  };\n\n  const likePost = (postId) => {\n    const updatedPosts = posts.map((post) => {\n      if (post.id === postId) {\n        post.likes += 1;\n      }\n      return post;\n    });\n    setPosts(updatedPosts);\n  };\n\n  const sharePost = (postId) => {\n    // Implement sharing logic (e.g., opening a sharing dialog)\n    alert(`Share post with id ${postId}`);\n  };\n\n  return (\n    <div className=\"posts\">\n      {posts.map((post) => (\n        <div key={post.id} className=\"post\">\n          {post.type === 'code' ? (\n            <pre>\n              <code>{post.content}</code>\n            </pre>\n          ) : (\n            <img src={post.content} alt=\"Post\" />\n          )}\n          <div className=\"actions\">\n            <button onClick={() => likePost(post.id)}>Like ({post.likes})</button>\n            <button onClick={() => sharePost(post.id)}>Share</button>\n          </div>\n          <div className=\"comments\">\n            <h3>Comments:</h3>\n            <ul>\n              {post.comments.map((comment, index) => (\n                <li key={index}>{comment}</li>\n              ))}\n            </ul>\n            <input\n              type=\"text\"\n              placeholder=\"Add a comment\"\n              onKeyUp={(e) => {\n                if (e.key === 'Enter' && e.target.value.trim() !== '') {\n                  addComment(post.id, e.target.value);\n                  e.target.value = '';\n                }\n              }}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}