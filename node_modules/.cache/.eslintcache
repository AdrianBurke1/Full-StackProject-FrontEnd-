[{"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/index.js":"1","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/App.js":"2","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/header.js":"3","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Header.js":"4","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Home.js":"5","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Profile.js":"6","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Notifications.js":"7","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Messages.js":"8","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/TechSidebar.js":"9","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Posts.js":"10","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Login.js":"11","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Post.js":"12","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Signup.js":"13"},{"size":469,"mtime":1694110638713,"results":"14","hashOfConfig":"15"},{"size":1420,"mtime":1694275205416,"results":"16","hashOfConfig":"15"},{"size":472,"mtime":1694113985714,"results":"17","hashOfConfig":"15"},{"size":823,"mtime":1694557254448,"results":"18","hashOfConfig":"15"},{"size":1274,"mtime":1694285672602,"results":"19","hashOfConfig":"15"},{"size":5875,"mtime":1694279354930,"results":"20","hashOfConfig":"15"},{"size":211,"mtime":1694114450624,"results":"21","hashOfConfig":"15"},{"size":195,"mtime":1694114387134,"results":"22","hashOfConfig":"15"},{"size":1698,"mtime":1694275980515,"results":"23","hashOfConfig":"15"},{"size":2239,"mtime":1694284725952,"results":"24","hashOfConfig":"15"},{"size":1173,"mtime":1694274535674,"results":"25","hashOfConfig":"15"},{"size":358,"mtime":1694284044423,"results":"26","hashOfConfig":"15"},{"size":2089,"mtime":1694275134372,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aej2dx",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/index.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/App.js",["70"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'; // Import Routes\nimport './App.css';\nimport Header from './Components/Header';\nimport Home from './Components/Home';\nimport Profile from './Components/Profile';\nimport Login from './Components/Login'; // Import the Login component\nimport TechSidebar from './Components/TechSidebar';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    // Make an HTTP GET request to fetch data from the backend\n    axios.get('/api/posts')\n      .then((response) => {\n        // Update the state with the received data\n        setPosts(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n       <TechSidebar />\n\n        <Routes> {/* Use Routes instead of Switch */}\n          <Route path=\"/login\" element={<Login />} /> {/* Use the \"element\" prop */}\n          <Route path=\"/profile\" element={<Profile />} /> {/* Use the \"element\" prop */}\n          <Route path=\"/\" element={<Home />} /> {/* Use the \"element\" prop */}\n          {/* Add other routes for your pages */}\n        </Routes>\n        {/* Add a Login button that leads to the login page */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/header.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Header.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Home.js",["71","72","73"],[],"import React from 'react';\nimport './Home.css'; // Import your CSS file for styling\nimport Post from './Post'; // Import the Post component\nimport TechSidebar from './TechSidebar'; // Import the TechSidebar component\n\nfunction Home() {\n  const [posts, setPosts] = React.useState([\n    {\n      id: 1,\n      type: 'code',\n      content: 'function example() {\\n for (let i = 1; i <= 5; i++)\\n}',\n      comments: [],\n      likes: 5,\n    },\n    {\n      id: 2,\n      type: 'image',\n      content: 'project-image.jpg',\n      comments: ['Nice project!', 'I love it!'],\n      likes: 10,\n    },\n    // Add more example posts here\n  ]);\n\n  const newestPost = posts[posts.length - 1]; // Get the newest post\n\n  return (\n    <div className=\"home\">\n      <div className=\"header\">\n        {/* Header component or logo */}\n        <h1>Welcome to Tech Space</h1>\n      </div>\n      <div className=\"main-content\">\n        <div className=\"post-section\">\n          {/* Post creation and display section */}\n          <h2>Latest Posts</h2>\n          {posts.map((post) => (\n            <Post key={post.id} post={post} />\n          ))}\n        </div>\n        <div className=\"sidebar-section\">\n          {/* Sidebar component */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Profile.js",["74"],[],"import React, { useState } from 'react';\nimport './Profile.css'; // Import the CSS file\n\nfunction Profile() {\n  // State to manage user's posts\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const [imageURL, setImageURL] = useState(''); // State to store the image URL\n  const [imageFile, setImageFile] = useState(null); // State to store the selected image file\n  const [comment, setComment] = useState(''); // State to store the comment text\n\n  // Function to handle posting a new image or project\n  const handlePost = () => {\n    // Implement logic to upload the new post (image or project)\n    // After uploading, add it to the posts state\n    if (newPost.trim() !== '') {\n      const updatedPosts = [...posts, { text: newPost, image: imageURL, comments: [] }];\n      setPosts(updatedPosts);\n      setNewPost(''); // Clear the new post input\n      setImageURL(''); // Clear the image URL input\n      setImageFile(null); // Clear the image file input\n    }\n  };\n\n  // Function to handle posting a comment\n  const handleComment = (index) => {\n    const updatedPosts = [...posts];\n    updatedPosts[index].comments.push(comment);\n    setPosts(updatedPosts);\n    setComment(''); // Clear the comment input\n  };\n\n  // Function to handle post deletion\n  const handleDeletePost = (index) => {\n    const updatedPosts = [...posts];\n    updatedPosts.splice(index, 1);\n    setPosts(updatedPosts);\n  };\n\n  // Function to handle file input change\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      // Set the selected image file\n      setImageFile(file);\n      // Read the image as a data URL and set it as the image URL\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImageURL(event.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Function to handle drag and drop\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    const droppedFile = e.dataTransfer.files[0];\n    if (droppedFile && (droppedFile.type === 'image/jpeg' || droppedFile.type === 'image/png')) {\n      // Set the selected image file\n      setImageFile(droppedFile);\n      // Read the image as a data URL and set it as the image URL\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImageURL(event.target.result);\n      };\n      reader.readAsDataURL(droppedFile);\n\n      // Automatically add the image to the new post\n      setNewPost((prevPost) => {\n        return prevPost + '\\n![Image](file:///' + droppedFile.path.replace(/\\\\/g, '/') + ')';\n      });\n    }\n  };\n\n  return (\n    <div className=\"profile-page\">\n      <div className=\"profile-header\">\n        {/* Profile picture */}\n        <div className=\"profile-picture-container\">\n          <img\n            src=\"https://avatars.githubusercontent.com/u/114108495?v=4\" // Replace with your profile picture URL\n            alt=\"Profile\"\n            className=\"profile-picture\"\n          />\n        </div>\n\n        {/* Profile name */}\n        <h2>Adrian Burke</h2>\n      </div>\n\n      <div className=\"post-section\">\n        <h3>My Posts</h3>\n\n        {/* Input for posting images or projects */}\n        <div\n          className=\"post-input\"\n          onDragOver={handleDragOver}\n          onDrop={handleDrop}\n        >\n          <textarea\n            placeholder=\"Share your images or projects...\"\n            value={newPost}\n            onChange={(e) => setNewPost(e.target.value)}\n          ></textarea>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleImageChange}\n            style={{ display: 'none' }} // Hide the file input element\n          />\n          <label htmlFor=\"fileInput\" className=\"file-input-label\">\n\n            <button\n              id=\"fileInput\"\n              onClick={(e) => e.preventDefault()}\n              style={{ cursor: 'pointer' }}\n            >\n              Upload Image\n            </button>\n          </label>\n        </div>\n\n        {/* Display the selected image */}\n        {imageURL && (\n          <img\n            src={imageURL}\n            alt=\"Selected\"\n            style={{ width: '100px', height: 'auto' }}\n          />\n        )}\n\n        {/* Button to post */}\n        <button onClick={handlePost}>Post</button>\n\n        {/* Display user's existing posts */}\n        <div className=\"user-posts\">\n          {posts.map((post, index) => (\n            <div key={index} className=\"user-post\">\n              {/* Render the user's post (image or project) */}\n              <p>{post.text}</p>\n              {post.image && (\n                <img\n                  src={post.image}\n                  alt=\"User Post\"\n                  style={{ width: '100px', height: 'auto' }}\n                />\n              )}\n\n              {/* Input for posting comments */}\n              <div className=\"comment-input\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment...\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n                <button onClick={() => handleComment(index)}>Comment</button>\n              </div>\n\n              {/* Display comments */}\n              <div className=\"comments\">\n                {post.comments.map((comment, commentIndex) => (\n                  <div key={commentIndex} className=\"comment\">\n                    <p>{comment}</p>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"post-actions\">\n                <button>Like</button>\n                <button onClick={() => handleDeletePost(index)}>Delete</button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Notifications.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Messages.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/TechSidebar.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Posts.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Login.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Post.js",[],[],"/Users/adrianburke/Desktop/Full-StackProject-FrontEnd-/src/Components/Signup.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":19},{"ruleId":"75","severity":1,"message":"80","line":7,"column":17,"nodeType":"77","messageId":"78","endLine":7,"endColumn":25},{"ruleId":"75","severity":1,"message":"81","line":25,"column":9,"nodeType":"77","messageId":"78","endLine":25,"endColumn":19},{"ruleId":"75","severity":1,"message":"82","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":19},"no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","'TechSidebar' is defined but never used.","'setPosts' is assigned a value but never used.","'newestPost' is assigned a value but never used.","'imageFile' is assigned a value but never used."]